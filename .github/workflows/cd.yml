name: CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to Yandex Cloud Container Registry
        run: |
          echo "${{ secrets.YC_KEY_JSON }}" > key.json

          IAM_TOKEN=$(curl -s -X POST \
            -H "Content-Type: application/json" \
            -d @key.json \
            https://iam.api.cloud.yandex.net/iam/v1/tokens | jq -r .iamToken)

          echo $IAM_TOKEN | docker login \
            -u iam \
            --password-stdin ${{ secrets.YC_REGISTRY }}

          rm key.json
          
      - name: Build and push Django image
        run: |
          docker build -t ${{ secrets.YC_REGISTRY }}/django-service:latest ./builds/django
          docker push ${{ secrets.YC_REGISTRY }}/django-service:latest

      - name: Build and push RIFE image
        run: |
          docker build -t ${{ secrets.YC_REGISTRY }}/rife-service:latest ./builds/rife
          docker push ${{ secrets.YC_REGISTRY }}/rife-service:latest

      - name: Build and push Upscale image
        run: |
          docker build -t ${{ secrets.YC_REGISTRY }}/upscale-service:latest ./builds/upscale
          docker push ${{ secrets.YC_REGISTRY }}/upscale-service:latest

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Pull and restart services on remote server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            docker pull ${{ secrets.YC_REGISTRY }}/django-service:latest
            docker pull ${{ secrets.YC_REGISTRY }}/rife-service:latest
            docker pull ${{ secrets.YC_REGISTRY }}/upscale-service:latest

            export DJANGO_SECRET_KEY="${{ secrets.SECRET_KEY }}"
            cd ~/deploy/app
            docker-compose down
            docker-compose -f docker-compose.prod.yml up -d
          EOF