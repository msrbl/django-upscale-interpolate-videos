name: uiweb

volumes:
  postgres-data:
  media:
    driver: local

networks:
  app_network:
    driver: bridge

services:
  django:
    build: ./builds/django
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./builds/django/:/app/
      - media:/media
    ports:
      - 8000:8000
    environment:
      POSTGRES_HOST: postgres-db
      DEBUG: 1
      SECRET_KEY: ${SECRET_KEY}
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONUNBUFFERED: 1
      VIDEO_STORAGE_DIR: /media
    depends_on:
      - redis
      - postgres-db
    networks:
      - app_network

  postgres-db:
    image: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_ROOT_PASSWORD: ${POSTGRES_PASSWORD}
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app_network
    

  celery:
    build: ./builds
    command: celery -A core worker --loglevel=info --logfile=logs/celery.log
    volumes:
      - ./builds/django/:/app/
      - media:/media
      - ./logs/celery:/app/logs
    environment:
      POSTGRES_HOST: postgres-db
      DEBUG: 1
      SECRET_KEY: ${SECRET_KEY}
    depends_on:
      - django
      - redis
      - postgres-db
    networks:
      - app_network

  redis:
    image: redis:5-alpine
    networks:
      - app_network

  practical-rife:
   build: ./builds/rife
   command: python3 /app/server_interpolation.py
   volumes:
     - media:/media
   ports:
     - 5000:5000
   runtime: nvidia
   networks:
      - app_network
  
  upscale:
   build: ./builds/upscale
   command: python3 /app/server_upscale.py
   volumes:
     - media:/media
   ports:
     - 5001:5001
   runtime: nvidia
   networks:
      - app_network